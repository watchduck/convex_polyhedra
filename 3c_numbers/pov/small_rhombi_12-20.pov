#include "polyhedra_davinci.inc"


#declare Factor = .975;
#declare Abs = array[7]{ (0)*Factor, (1)*Factor, (1/2 + sqrt(5)/2)*Factor, pow(1/2 + sqrt(5)/2, 2)*Factor, (1 + sqrt(5))*Factor, (sqrt(5)/2 + 5/2)*Factor, pow(1/2 + sqrt(5)/2, 3)*Factor, }

#declare P = array[60]{ <-Abs[6],-Abs[1],-Abs[1]>, <-Abs[6],-Abs[1],Abs[1]>, <-Abs[6],Abs[1],-Abs[1]>, <-Abs[6],Abs[1],Abs[1]>, <-Abs[5],-Abs[3],Abs[0]>, <-Abs[5],Abs[3],Abs[0]>, <-Abs[4],-Abs[2],-Abs[3]>, <-Abs[4],-Abs[2],Abs[3]>, <-Abs[4],Abs[2],-Abs[3]>, <-Abs[4],Abs[2],Abs[3]>, <-Abs[3],-Abs[4],-Abs[2]>, <-Abs[3],-Abs[4],Abs[2]>, <-Abs[3],Abs[0],-Abs[5]>, <-Abs[3],Abs[0],Abs[5]>, <-Abs[3],Abs[4],-Abs[2]>, <-Abs[3],Abs[4],Abs[2]>, <-Abs[2],-Abs[3],-Abs[4]>, <-Abs[2],-Abs[3],Abs[4]>, <-Abs[2],Abs[3],-Abs[4]>, <-Abs[2],Abs[3],Abs[4]>, <-Abs[1],-Abs[6],-Abs[1]>, <-Abs[1],-Abs[6],Abs[1]>, <-Abs[1],-Abs[1],-Abs[6]>, <-Abs[1],-Abs[1],Abs[6]>, <-Abs[1],Abs[1],-Abs[6]>, <-Abs[1],Abs[1],Abs[6]>, <-Abs[1],Abs[6],-Abs[1]>, <-Abs[1],Abs[6],Abs[1]>, <Abs[0],-Abs[5],-Abs[3]>, <Abs[0],-Abs[5],Abs[3]>, <Abs[0],Abs[5],-Abs[3]>, <Abs[0],Abs[5],Abs[3]>, <Abs[1],-Abs[6],-Abs[1]>, <Abs[1],-Abs[6],Abs[1]>, <Abs[1],-Abs[1],-Abs[6]>, <Abs[1],-Abs[1],Abs[6]>, <Abs[1],Abs[1],-Abs[6]>, <Abs[1],Abs[1],Abs[6]>, <Abs[1],Abs[6],-Abs[1]>, <Abs[1],Abs[6],Abs[1]>, <Abs[2],-Abs[3],-Abs[4]>, <Abs[2],-Abs[3],Abs[4]>, <Abs[2],Abs[3],-Abs[4]>, <Abs[2],Abs[3],Abs[4]>, <Abs[3],-Abs[4],-Abs[2]>, <Abs[3],-Abs[4],Abs[2]>, <Abs[3],Abs[0],-Abs[5]>, <Abs[3],Abs[0],Abs[5]>, <Abs[3],Abs[4],-Abs[2]>, <Abs[3],Abs[4],Abs[2]>, <Abs[4],-Abs[2],-Abs[3]>, <Abs[4],-Abs[2],Abs[3]>, <Abs[4],Abs[2],-Abs[3]>, <Abs[4],Abs[2],Abs[3]>, <Abs[5],-Abs[3],Abs[0]>, <Abs[5],Abs[3],Abs[0]>, <Abs[6],-Abs[1],-Abs[1]>, <Abs[6],-Abs[1],Abs[1]>, <Abs[6],Abs[1],-Abs[1]>, <Abs[6],Abs[1],Abs[1]>, }


#declare UncoloredEdges = array[120]{array[2]{5, 14}, array[2]{40, 44}, array[2]{28, 32}, array[2]{47, 51}, array[2]{36, 42}, array[2]{2, 5}, array[2]{36, 46}, array[2]{6, 12}, array[2]{17, 29}, array[2]{55, 59}, array[2]{26, 27}, array[2]{11, 21}, array[2]{43, 49}, array[2]{3, 5}, array[2]{55, 58}, array[2]{27, 31}, array[2]{46, 50}, array[2]{18, 24}, array[2]{21, 33}, array[2]{2, 3}, array[2]{42, 48}, array[2]{41, 45}, array[2]{39, 49}, array[2]{8, 14}, array[2]{44, 50}, array[2]{40, 50}, array[2]{6, 16}, array[2]{1, 3}, array[2]{43, 53}, array[2]{3, 9}, array[2]{58, 59}, array[2]{23, 35}, array[2]{35, 47}, array[2]{48, 52}, array[2]{33, 45}, array[2]{8, 12}, array[2]{56, 58}, array[2]{22, 24}, array[2]{7, 13}, array[2]{34, 40}, array[2]{37, 43}, array[2]{52, 58}, array[2]{41, 51}, array[2]{20, 21}, array[2]{37, 47}, array[2]{38, 39}, array[2]{7, 11}, array[2]{16, 28}, array[2]{0, 2}, array[2]{14, 18}, array[2]{17, 23}, array[2]{25, 37}, array[2]{50, 56}, array[2]{12, 24}, array[2]{2, 8}, array[2]{26, 38}, array[2]{29, 41}, array[2]{9, 13}, array[2]{32, 33}, array[2]{19, 25}, array[2]{54, 56}, array[2]{6, 10}, array[2]{30, 38}, array[2]{51, 57}, array[2]{15, 19}, array[2]{27, 39}, array[2]{0, 6}, array[2]{47, 53}, array[2]{49, 53}, array[2]{29, 33}, array[2]{20, 32}, array[2]{24, 36}, array[2]{20, 28}, array[2]{23, 25}, array[2]{45, 51}, array[2]{44, 54}, array[2]{7, 17}, array[2]{56, 57}, array[2]{31, 39}, array[2]{19, 31}, array[2]{15, 27}, array[2]{46, 52}, array[2]{18, 30}, array[2]{42, 52}, array[2]{30, 42}, array[2]{34, 46}, array[2]{1, 7}, array[2]{26, 30}, array[2]{10, 20}, array[2]{38, 48}, array[2]{11, 17}, array[2]{28, 40}, array[2]{45, 54}, array[2]{0, 1}, array[2]{48, 55}, array[2]{14, 26}, array[2]{34, 36}, array[2]{35, 37}, array[2]{12, 22}, array[2]{16, 22}, array[2]{32, 44}, array[2]{5, 15}, array[2]{54, 57}, array[2]{53, 59}, array[2]{4, 11}, array[2]{8, 18}, array[2]{10, 16}, array[2]{31, 43}, array[2]{57, 59}, array[2]{13, 25}, array[2]{9, 19}, array[2]{13, 23}, array[2]{0, 4}, array[2]{21, 29}, array[2]{35, 41}, array[2]{1, 4}, array[2]{9, 15}, array[2]{49, 55}, array[2]{4, 10}, array[2]{22, 34}};


#declare FaceNormalPoints = array[62]{<(-1 + sqrt(5))*(-sqrt(5)/3 - 1/2), 0, -(1 + sqrt(5))*(-sqrt(5)/3 - 1/2)>*Factor, <-(1/2 + sqrt(5)/3)*(1 + sqrt(5)), (-1 + sqrt(5))*(1/2 + sqrt(5)/3), 0>*Factor, <(-1 + sqrt(5))*(1/2 + sqrt(5)/3), 0, (1/2 + sqrt(5)/3)*(1 + sqrt(5))>*Factor, <(1 + sqrt(5))*(-sqrt(5)/3 - 1/2), (-1 + sqrt(5))*(-sqrt(5)/3 - 1/2), 0>*Factor, <-2*sqrt(5)/3 - 1, -2*sqrt(5)/3 - 1, -2*sqrt(5)/3 - 1>*Factor, <(-1 + sqrt(5))*(1/2 + sqrt(5)/3), 0, -(1/2 + sqrt(5)/3)*(1 + sqrt(5))>*Factor, <1 + 2*sqrt(5)/3, 1 + 2*sqrt(5)/3, -2*sqrt(5)/3 - 1>*Factor, <0, -(1 + sqrt(5))*(-sqrt(5)/3 - 1/2), (-sqrt(5) + 1)*(-sqrt(5)/3 - 1/2)>*Factor, <1 + 2*sqrt(5)/3, 1 + 2*sqrt(5)/3, 1 + 2*sqrt(5)/3>*Factor, <-2*sqrt(5)/3 - 1, 1 + 2*sqrt(5)/3, 1 + 2*sqrt(5)/3>*Factor, <(1/2 + sqrt(5)/3)*(1 + sqrt(5)), (-1 + sqrt(5))*(1/2 + sqrt(5)/3), 0>*Factor, <(-1 + sqrt(5))*(-sqrt(5)/3 - 1/2), 0, (1 + sqrt(5))*(-sqrt(5)/3 - 1/2)>*Factor, <-2*sqrt(5)/3 - 1, 1 + 2*sqrt(5)/3, -2*sqrt(5)/3 - 1>*Factor, <-(1 + sqrt(5))*(-sqrt(5)/3 - 1/2), (-1 + sqrt(5))*(-sqrt(5)/3 - 1/2), 0>*Factor, <0, (1/2 + sqrt(5)/3)*(1 + sqrt(5)), (1/2 + sqrt(5)/3)*(-sqrt(5) + 1)>*Factor, <0, -(1/2 + sqrt(5)/3)*(1 + sqrt(5)), (-1 + sqrt(5))*(1/2 + sqrt(5)/3)>*Factor, <1 + 2*sqrt(5)/3, -2*sqrt(5)/3 - 1, -2*sqrt(5)/3 - 1>*Factor, <-2*sqrt(5)/3 - 1, -2*sqrt(5)/3 - 1, 1 + 2*sqrt(5)/3>*Factor, <0, (1 + sqrt(5))*(-sqrt(5)/3 - 1/2), (-1 + sqrt(5))*(-sqrt(5)/3 - 1/2)>*Factor, <1 + 2*sqrt(5)/3, -2*sqrt(5)/3 - 1, 1 + 2*sqrt(5)/3>*Factor, <(-1 + sqrt(5))*(1/2 + sqrt(5)/4), (1/2 + sqrt(5)/4)*(1 + sqrt(5)), 1 + sqrt(5)/2>*Factor, <(-1 + sqrt(5))*(1/2 + sqrt(5)/4), -(1/2 + sqrt(5)/4)*(1 + sqrt(5)), -sqrt(5)/2 - 1>*Factor, <-sqrt(5)/2 - 1, (1/2 + sqrt(5)/4)*(-sqrt(5) + 1), (1/2 + sqrt(5)/4)*(1 + sqrt(5))>*Factor, <0, 2 + sqrt(5), 0>*Factor, <0, -3/2 - 3*sqrt(5)/10, -(1 + sqrt(5))*(3*sqrt(5)/20 + 3/4)>*Factor, <(1/2 + sqrt(5)/4)*(1 + sqrt(5)), 1 + sqrt(5)/2, (-1 + sqrt(5))*(1/2 + sqrt(5)/4)>*Factor, <2 + sqrt(5), 0, 0>*Factor, <-sqrt(5)/2 - 1, (1/2 + sqrt(5)/4)*(-sqrt(5) + 1), -(1/2 + sqrt(5)/4)*(1 + sqrt(5))>*Factor, <-3*sqrt(5)*(sqrt(5) + 3)/10, 0, 3*sqrt(5)*(1 + sqrt(5))/10>*Factor, <(1 + sqrt(5))*(-sqrt(5)/4 - 1/2), 1 + sqrt(5)/2, (-sqrt(5) + 1)*(-sqrt(5)/4 - 1/2)>*Factor, <(1/2 + sqrt(5)/4)*(1 + sqrt(5)), -sqrt(5)/2 - 1, (-1 + sqrt(5))*(1/2 + sqrt(5)/4)>*Factor, <(-1 + sqrt(5))*(-sqrt(5)/4 - 1/2), (1 + sqrt(5))*(-sqrt(5)/4 - 1/2), -sqrt(5)/2 - 1>*Factor, <0, 3*sqrt(5)/10 + 3/2, (1 + sqrt(5))*(3*sqrt(5)/20 + 3/4)>*Factor, <3*sqrt(5)*(1 + sqrt(5))/10, -3*sqrt(5)*(sqrt(5) + 3)/10, 0>*Factor, <-(1 + sqrt(5))*(-sqrt(5)/4 - 1/2), -sqrt(5)/2 - 1, (-1 + sqrt(5))*(-sqrt(5)/4 - 1/2)>*Factor, <3*sqrt(5)/10 + 3/2, -(-3/4 - 3*sqrt(5)/20)*(1 + sqrt(5)), 0>*Factor, <(-sqrt(5) + 1)*(-sqrt(5)/4 - 1/2), -(1 + sqrt(5))*(-sqrt(5)/4 - 1/2), -sqrt(5)/2 - 1>*Factor, <-3/2 - 3*sqrt(5)/10, (1 + sqrt(5))*(3*sqrt(5)/20 + 3/4), 0>*Factor, <-(-3/4 - 3*sqrt(5)/20)*(1 + sqrt(5)), 0, 3*sqrt(5)/10 + 3/2>*Factor, <(1 + sqrt(5))*(3*sqrt(5)/20 + 3/4), 0, -3/2 - 3*sqrt(5)/10>*Factor, <0, 0, -sqrt(5) - 2>*Factor, <0, 3*sqrt(5)/10 + 3/2, (-3/4 - 3*sqrt(5)/20)*(1 + sqrt(5))>*Factor, <(-sqrt(5) + 1)*(-sqrt(5)/4 - 1/2), (1 + sqrt(5))*(-sqrt(5)/4 - 1/2), 1 + sqrt(5)/2>*Factor, <0, -sqrt(5) - 2, 0>*Factor, <(1/2 + sqrt(5)/4)*(-sqrt(5) + 1), (1/2 + sqrt(5)/4)*(1 + sqrt(5)), 1 + sqrt(5)/2>*Factor, <-(1/2 + sqrt(5)/4)*(1 + sqrt(5)), -sqrt(5)/2 - 1, (1/2 + sqrt(5)/4)*(-sqrt(5) + 1)>*Factor, <1 + sqrt(5)/2, (1/2 + sqrt(5)/4)*(-sqrt(5) + 1), (1/2 + sqrt(5)/4)*(1 + sqrt(5))>*Factor, <0, -3/2 - 3*sqrt(5)/10, (1 + sqrt(5))*(3*sqrt(5)/20 + 3/4)>*Factor, <(1/2 + sqrt(5)/4)*(-sqrt(5) + 1), -(1/2 + sqrt(5)/4)*(1 + sqrt(5)), 1 + sqrt(5)/2>*Factor, <-sqrt(5)/2 - 1, (-1 + sqrt(5))*(1/2 + sqrt(5)/4), (1/2 + sqrt(5)/4)*(1 + sqrt(5))>*Factor, <-(1/2 + sqrt(5)/4)*(1 + sqrt(5)), -sqrt(5)/2 - 1, (-1 + sqrt(5))*(1/2 + sqrt(5)/4)>*Factor, <(-1 + sqrt(5))*(-sqrt(5)/4 - 1/2), -(1 + sqrt(5))*(-sqrt(5)/4 - 1/2), -sqrt(5)/2 - 1>*Factor, <-(1/2 + sqrt(5)/4)*(1 + sqrt(5)), 1 + sqrt(5)/2, (1/2 + sqrt(5)/4)*(-sqrt(5) + 1)>*Factor, <-sqrt(5) - 2, 0, 0>*Factor, <-3/2 - 3*sqrt(5)/10, (-3/4 - 3*sqrt(5)/20)*(1 + sqrt(5)), 0>*Factor, <1 + sqrt(5)/2, (-1 + sqrt(5))*(1/2 + sqrt(5)/4), (1/2 + sqrt(5)/4)*(1 + sqrt(5))>*Factor, <1 + sqrt(5)/2, (-1 + sqrt(5))*(-sqrt(5)/4 - 1/2), (1 + sqrt(5))*(-sqrt(5)/4 - 1/2)>*Factor, <-3*sqrt(5)*(sqrt(5) + 3)/10, 0, -3*sqrt(5)*(1 + sqrt(5))/10>*Factor, <(1/2 + sqrt(5)/4)*(1 + sqrt(5)), 1 + sqrt(5)/2, (1/2 + sqrt(5)/4)*(-sqrt(5) + 1)>*Factor, <0, 0, 2 + sqrt(5)>*Factor, <-sqrt(5)/2 - 1, (-1 + sqrt(5))*(1/2 + sqrt(5)/4), -(1/2 + sqrt(5)/4)*(1 + sqrt(5))>*Factor, <1 + sqrt(5)/2, (-sqrt(5) + 1)*(-sqrt(5)/4 - 1/2), (1 + sqrt(5))*(-sqrt(5)/4 - 1/2)>*Factor};


#include "numbers_footer.inc"
