from sympy import sqrt


subgroup_names_and_coordinates = {
    'C2 blue 05': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1, 1 + 2*sqrt(2), 1 + sqrt(2))],
    'C4 red 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (-sqrt(2) - 1, -1, 1 + 2*sqrt(2)), (1 + sqrt(2), -1, -2*sqrt(2) - 1)],
    'C2 blue 06': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1)],
    'C2 blue 01': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + sqrt(2), 1, 1 + 2*sqrt(2))],
    'C4xC2 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1, -2*sqrt(2) - 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-1, 1 + 2*sqrt(2), 1 + sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (-1, 1 + 2*sqrt(2), -sqrt(2) - 1), (-2*sqrt(2) - 1, -1, 1 + sqrt(2)), (1, -2*sqrt(2) - 1, -sqrt(2) - 1)],
    'C2 blue 02': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), 1 + sqrt(2), 1)],
    'Dih6 11': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1 + sqrt(2), -1, 1 + 2*sqrt(2)), (1 + sqrt(2), -2*sqrt(2) - 1, 1), (-1, 1 + sqrt(2), 1 + 2*sqrt(2)), (-2*sqrt(2) - 1, 1 + sqrt(2), 1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1), (-sqrt(2) - 1, 1 + 2*sqrt(2), -1), (1, -sqrt(2) - 1, -2*sqrt(2) - 1), (1 + 2*sqrt(2), -sqrt(2) - 1, -1)],
    'V yellow white 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1)],
    'C2 white 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2))],
    'Dih6 15': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1), (1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1, 1 + sqrt(2), -2*sqrt(2) - 1), (-sqrt(2) - 1, 1 + 2*sqrt(2), 1), (-2*sqrt(2) - 1, 1 + sqrt(2), 1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + sqrt(2), 1, 1 + 2*sqrt(2)), (-1, -2*sqrt(2) - 1, 1 + sqrt(2)), (-1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (1 + sqrt(2), -2*sqrt(2) - 1, -1), (1 + 2*sqrt(2), -sqrt(2) - 1, -1)],
    'Dih4 yellow red 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1), (1 + sqrt(2), -1, 1 + 2*sqrt(2)), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (-2*sqrt(2) - 1, -1, 1 + sqrt(2)), (-sqrt(2) - 1, -1, 1 + 2*sqrt(2)), (1 + sqrt(2), -1, -2*sqrt(2) - 1), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'trivial': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1)],
    'Dih4xC2 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1), (1 + sqrt(2), -1, 1 + 2*sqrt(2)), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (1 + sqrt(2), 1, -2*sqrt(2) - 1), (-sqrt(2) - 1, 1, 1 + 2*sqrt(2)), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + sqrt(2), 1, 1 + 2*sqrt(2)), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -1, 1 + sqrt(2)), (-sqrt(2) - 1, -1, 1 + 2*sqrt(2)), (1 + sqrt(2), -1, -2*sqrt(2) - 1), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'C2 yellow 21': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1 + sqrt(2), 1)],
    'C2^3 yellow 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1), (1 + sqrt(2), -1, 1 + 2*sqrt(2)), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + sqrt(2), 1, 1 + 2*sqrt(2)), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1)],
    'V white': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2))],
    'V blue white 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1 + sqrt(2), 1), (1 + 2*sqrt(2), -sqrt(2) - 1, -1)],
    'A4': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -2*sqrt(2) - 1, -1), (-1, -sqrt(2) - 1, -2*sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (1 + sqrt(2), -2*sqrt(2) - 1, 1), (1 + sqrt(2), 1 + 2*sqrt(2), -1), (1, 1 + sqrt(2), -2*sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-1, 1 + sqrt(2), 1 + 2*sqrt(2)), (-sqrt(2) - 1, 1 + 2*sqrt(2), 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2))],
    'C4 red 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1, -2*sqrt(2) - 1, -sqrt(2) - 1)],
    'Dih4 yellow orange 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1), (1 + sqrt(2), -1, 1 + 2*sqrt(2)), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (1 + sqrt(2), 1, -2*sqrt(2) - 1), (-sqrt(2) - 1, 1, 1 + 2*sqrt(2)), (-2*sqrt(2) - 1, 1, 1 + sqrt(2))],
    'C4xC2 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -sqrt(2) - 1, 1), (1 + 2*sqrt(2), 1 + sqrt(2), -1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (-2*sqrt(2) - 1, 1 + sqrt(2), -1), (-2*sqrt(2) - 1, -sqrt(2) - 1, 1), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'V yellow white 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1), (-2*sqrt(2) - 1, 1 + sqrt(2), 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2))],
    'S3 blue 03': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -2*sqrt(2) - 1, -1), (-1, -sqrt(2) - 1, -2*sqrt(2) - 1), (1 + sqrt(2), 1, 1 + 2*sqrt(2)), (1 + 2*sqrt(2), 1 + sqrt(2), 1), (1, 1 + 2*sqrt(2), 1 + sqrt(2))],
    'S3 blue 08': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (1 + sqrt(2), 1 + 2*sqrt(2), -1), (1 + 2*sqrt(2), 1 + sqrt(2), 1), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1), (-1, -2*sqrt(2) - 1, 1 + sqrt(2))],
    'Dih4xC2 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1, -2*sqrt(2) - 1, 1 + sqrt(2)), (1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1), (-1, 1 + 2*sqrt(2), -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, 1 + sqrt(2)), (-2*sqrt(2) - 1, -1, 1 + sqrt(2)), (1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'S4 yellow orange': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1), (-sqrt(2) - 1, -2*sqrt(2) - 1, -1), (-1, -sqrt(2) - 1, -2*sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1 + sqrt(2), -1, 1 + 2*sqrt(2)), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (1, -2*sqrt(2) - 1, 1 + sqrt(2)), (1 + 2*sqrt(2), -sqrt(2) - 1, 1), (1 + sqrt(2), -2*sqrt(2) - 1, 1), (1 + sqrt(2), 1 + 2*sqrt(2), -1), (1 + 2*sqrt(2), 1 + sqrt(2), -1), (1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1, 1 + sqrt(2), -2*sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (1 + sqrt(2), 1, -2*sqrt(2) - 1), (-1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-1, 1 + sqrt(2), 1 + 2*sqrt(2)), (-sqrt(2) - 1, 1 + 2*sqrt(2), 1), (-2*sqrt(2) - 1, 1 + sqrt(2), 1), (-sqrt(2) - 1, 1, 1 + 2*sqrt(2)), (-2*sqrt(2) - 1, 1, 1 + sqrt(2))],
    'Dih4 yellow orange 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1, -2*sqrt(2) - 1, 1 + sqrt(2)), (1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-2*sqrt(2) - 1, 1, 1 + sqrt(2))],
    'V gby 21': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1 + sqrt(2), 1), (1 + 2*sqrt(2), 1 + sqrt(2), 1), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'S3 blue 15': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1, 1 + sqrt(2), -2*sqrt(2) - 1), (-sqrt(2) - 1, 1 + 2*sqrt(2), 1), (1 + sqrt(2), 1, 1 + 2*sqrt(2)), (-1, -2*sqrt(2) - 1, 1 + sqrt(2)), (1 + 2*sqrt(2), -sqrt(2) - 1, -1)],
    'Dih4 blue orange 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1, -2*sqrt(2) - 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-1, 1 + 2*sqrt(2), 1 + sqrt(2)), (1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, 1 + sqrt(2)), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'S3 blue 11': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + sqrt(2), -2*sqrt(2) - 1, 1), (-1, 1 + sqrt(2), 1 + 2*sqrt(2)), (1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1), (1 + 2*sqrt(2), -sqrt(2) - 1, -1)],
    'C2 yellow 01': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1)],
    'Dih4xC2 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + 2*sqrt(2), -sqrt(2) - 1, 1), (1 + 2*sqrt(2), 1 + sqrt(2), -1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1 + sqrt(2), 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1 + sqrt(2), 1), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1 + sqrt(2), -1), (-2*sqrt(2) - 1, -sqrt(2) - 1, 1), (-2*sqrt(2) - 1, -1, 1 + sqrt(2)), (1 + 2*sqrt(2), -sqrt(2) - 1, -1), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'C2 yellow 05': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1)],
    'Dih4 yellow red 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1), (-2*sqrt(2) - 1, 1 + sqrt(2), 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1 + sqrt(2), -1), (-2*sqrt(2) - 1, -sqrt(2) - 1, 1), (-2*sqrt(2) - 1, -1, 1 + sqrt(2))],
    'V yellow white 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -1, 1 + sqrt(2))],
    'V inv yellow 21': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1 + sqrt(2), 1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + 2*sqrt(2), -sqrt(2) - 1, -1)],
    'S4xC2': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1), (-sqrt(2) - 1, -2*sqrt(2) - 1, -1), (-1, -sqrt(2) - 1, -2*sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1 + sqrt(2), -1, 1 + 2*sqrt(2)), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (1, -2*sqrt(2) - 1, 1 + sqrt(2)), (1 + 2*sqrt(2), -sqrt(2) - 1, 1), (1 + sqrt(2), -2*sqrt(2) - 1, 1), (1 + sqrt(2), 1 + 2*sqrt(2), -1), (1 + 2*sqrt(2), 1 + sqrt(2), -1), (1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1, 1 + sqrt(2), -2*sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (1 + sqrt(2), 1, -2*sqrt(2) - 1), (-1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-1, 1 + sqrt(2), 1 + 2*sqrt(2)), (-sqrt(2) - 1, 1 + 2*sqrt(2), 1), (-2*sqrt(2) - 1, 1 + sqrt(2), 1), (-sqrt(2) - 1, 1, 1 + 2*sqrt(2)), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + sqrt(2), 1, 1 + 2*sqrt(2)), (1 + 2*sqrt(2), 1 + sqrt(2), 1), (1 + sqrt(2), 1 + 2*sqrt(2), 1), (1, 1 + sqrt(2), 1 + 2*sqrt(2)), (1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1), (-1, 1 + sqrt(2), -2*sqrt(2) - 1), (-1, 1 + 2*sqrt(2), -sqrt(2) - 1), (-2*sqrt(2) - 1, 1 + sqrt(2), -1), (-sqrt(2) - 1, 1 + 2*sqrt(2), -1), (-sqrt(2) - 1, -2*sqrt(2) - 1, 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, 1), (-1, -2*sqrt(2) - 1, 1 + sqrt(2)), (-1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (-2*sqrt(2) - 1, -1, 1 + sqrt(2)), (-sqrt(2) - 1, -1, 1 + 2*sqrt(2)), (1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1, -sqrt(2) - 1, -2*sqrt(2) - 1), (1 + sqrt(2), -2*sqrt(2) - 1, -1), (1 + 2*sqrt(2), -sqrt(2) - 1, -1), (1 + sqrt(2), -1, -2*sqrt(2) - 1), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'Dih6 03': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1), (-sqrt(2) - 1, -2*sqrt(2) - 1, -1), (-1, -sqrt(2) - 1, -2*sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + sqrt(2), 1, 1 + 2*sqrt(2)), (1 + 2*sqrt(2), 1 + sqrt(2), 1), (1 + sqrt(2), 1 + 2*sqrt(2), 1), (1, 1 + sqrt(2), 1 + 2*sqrt(2)), (1, 1 + 2*sqrt(2), 1 + sqrt(2))],
    'C2 yellow 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -1, 1 + sqrt(2))],
    'Dih6 08': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1), (1 + sqrt(2), -1, 1 + 2*sqrt(2)), (1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (1 + sqrt(2), 1 + 2*sqrt(2), -1), (1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1 + sqrt(2), 1), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1), (-1, 1 + sqrt(2), -2*sqrt(2) - 1), (-sqrt(2) - 1, -2*sqrt(2) - 1, 1), (-1, -2*sqrt(2) - 1, 1 + sqrt(2))],
    'Dih4 blue red 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1 + sqrt(2), 1), (-2*sqrt(2) - 1, 1 + sqrt(2), -1), (-2*sqrt(2) - 1, -sqrt(2) - 1, 1), (1 + 2*sqrt(2), -sqrt(2) - 1, -1)],
    'A4xC2': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -2*sqrt(2) - 1, -1), (-1, -sqrt(2) - 1, -2*sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (1 + sqrt(2), -2*sqrt(2) - 1, 1), (1 + sqrt(2), 1 + 2*sqrt(2), -1), (1, 1 + sqrt(2), -2*sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-1, 1 + sqrt(2), 1 + 2*sqrt(2)), (-sqrt(2) - 1, 1 + 2*sqrt(2), 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + sqrt(2), 1 + 2*sqrt(2), 1), (1, 1 + sqrt(2), 1 + 2*sqrt(2)), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1), (-1, 1 + sqrt(2), -2*sqrt(2) - 1), (-sqrt(2) - 1, 1 + 2*sqrt(2), -1), (-sqrt(2) - 1, -2*sqrt(2) - 1, 1), (-1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (-2*sqrt(2) - 1, -1, 1 + sqrt(2)), (1, -sqrt(2) - 1, -2*sqrt(2) - 1), (1 + sqrt(2), -2*sqrt(2) - 1, -1), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'C2 inv': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), 1, 1 + sqrt(2))],
    'C2 yellow 14': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1, 1 + 2*sqrt(2), -sqrt(2) - 1)],
    'Dih4 blue orange 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + sqrt(2), 1, -2*sqrt(2) - 1), (-sqrt(2) - 1, 1, 1 + 2*sqrt(2)), (1 + sqrt(2), 1, 1 + 2*sqrt(2)), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1), (-2*sqrt(2) - 1, -1, 1 + sqrt(2)), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'S3 yellow 11': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1 + sqrt(2), -1, 1 + 2*sqrt(2)), (1 + sqrt(2), -2*sqrt(2) - 1, 1), (-1, 1 + sqrt(2), 1 + 2*sqrt(2)), (-2*sqrt(2) - 1, 1 + sqrt(2), 1)],
    'S3 yellow 15': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1), (1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1, 1 + sqrt(2), -2*sqrt(2) - 1), (-sqrt(2) - 1, 1 + 2*sqrt(2), 1), (-2*sqrt(2) - 1, 1 + sqrt(2), 1)],
    'C2 yellow 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1)],
    'C4 red 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (-2*sqrt(2) - 1, 1 + sqrt(2), -1), (-2*sqrt(2) - 1, -sqrt(2) - 1, 1)],
    'C2 blue 21': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -sqrt(2) - 1, -1)],
    'V blue white 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-1, -2*sqrt(2) - 1, 1 + sqrt(2))],
    'V gby 06': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + sqrt(2), -1, 1 + 2*sqrt(2)), (1 + sqrt(2), 1, 1 + 2*sqrt(2)), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1)],
    'V gby 05': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, 1 + sqrt(2)), (-2*sqrt(2) - 1, -1, 1 + sqrt(2))],
    'V gby 02': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1), (1 + 2*sqrt(2), -sqrt(2) - 1, -1), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'V gby 01': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1)],
    'C4 orange 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1, -2*sqrt(2) - 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-1, 1 + 2*sqrt(2), 1 + sqrt(2))],
    'S3 yellow 08': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1), (1 + sqrt(2), -1, 1 + 2*sqrt(2)), (1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (1 + sqrt(2), 1 + 2*sqrt(2), -1), (1, 1 + 2*sqrt(2), -sqrt(2) - 1)],
    'S3 yellow 03': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1), (-sqrt(2) - 1, -2*sqrt(2) - 1, -1), (-1, -sqrt(2) - 1, -2*sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1)],
    'V inv white 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1)],
    'V inv yellow 01': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + sqrt(2), 1, 1 + 2*sqrt(2))],
    'V inv yellow 02': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1 + sqrt(2), 1)],
    'V inv yellow 05': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1, 1 + 2*sqrt(2), 1 + sqrt(2))],
    'V inv yellow 06': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + sqrt(2), -1, 1 + 2*sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1)],
    'V blue white 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + sqrt(2), 1, 1 + 2*sqrt(2)), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1)],
    'Dih4 blue red 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + sqrt(2), 1, 1 + 2*sqrt(2)), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1), (-sqrt(2) - 1, -1, 1 + 2*sqrt(2)), (1 + sqrt(2), -1, -2*sqrt(2) - 1)],
    'C4 orange 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + sqrt(2), 1, -2*sqrt(2) - 1), (-sqrt(2) - 1, 1, 1 + 2*sqrt(2))],
    'C2 yellow 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'C3 08': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (1 + sqrt(2), 1 + 2*sqrt(2), -1)],
    'C3 03': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -2*sqrt(2) - 1, -1), (-1, -sqrt(2) - 1, -2*sqrt(2) - 1)],
    'V inv white 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (-2*sqrt(2) - 1, -1, 1 + sqrt(2))],
    'S4 blue red': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -2*sqrt(2) - 1, -1), (-1, -sqrt(2) - 1, -2*sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (1 + sqrt(2), -2*sqrt(2) - 1, 1), (1 + sqrt(2), 1 + 2*sqrt(2), -1), (1, 1 + sqrt(2), -2*sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-1, 1 + sqrt(2), 1 + 2*sqrt(2)), (-sqrt(2) - 1, 1 + 2*sqrt(2), 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + sqrt(2), 1, 1 + 2*sqrt(2)), (1 + 2*sqrt(2), 1 + sqrt(2), 1), (1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-sqrt(2) - 1, 1, -2*sqrt(2) - 1), (-1, 1 + 2*sqrt(2), -sqrt(2) - 1), (-2*sqrt(2) - 1, 1 + sqrt(2), -1), (-2*sqrt(2) - 1, -sqrt(2) - 1, 1), (-1, -2*sqrt(2) - 1, 1 + sqrt(2)), (-sqrt(2) - 1, -1, 1 + 2*sqrt(2)), (1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1 + 2*sqrt(2), -sqrt(2) - 1, -1), (1 + sqrt(2), -1, -2*sqrt(2) - 1)],
    'C6 15': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1, 1 + sqrt(2), -2*sqrt(2) - 1), (-sqrt(2) - 1, 1 + 2*sqrt(2), 1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (-1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (1 + sqrt(2), -2*sqrt(2) - 1, -1)],
    'C6 11': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + sqrt(2), -2*sqrt(2) - 1, 1), (-1, 1 + sqrt(2), 1 + 2*sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (-sqrt(2) - 1, 1 + 2*sqrt(2), -1), (1, -sqrt(2) - 1, -2*sqrt(2) - 1)],
    'Dih4 blue red 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-1, 1 + 2*sqrt(2), -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, 1 + sqrt(2)), (1, -2*sqrt(2) - 1, -sqrt(2) - 1)],
    'V inv white 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'C2 white 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2))],
    'C2^3 white': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -1, 1 + sqrt(2)), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'V yellow white 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'C3 15': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1, 1 + sqrt(2), -2*sqrt(2) - 1), (-sqrt(2) - 1, 1 + 2*sqrt(2), 1)],
    'C2 yellow 02': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1)],
    'C3 11': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + sqrt(2), -2*sqrt(2) - 1, 1), (-1, 1 + sqrt(2), 1 + 2*sqrt(2))],
    'C2^3 yellow 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1), (-2*sqrt(2) - 1, 1 + sqrt(2), 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1 + sqrt(2), 1), (1 + 2*sqrt(2), -sqrt(2) - 1, -1), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'C2 yellow 06': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + sqrt(2), -1, 1 + 2*sqrt(2))],
    'C2 blue 14': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, 1 + sqrt(2))],
    'C6 03': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -2*sqrt(2) - 1, -1), (-1, -sqrt(2) - 1, -2*sqrt(2) - 1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1 + sqrt(2), 1 + 2*sqrt(2), 1), (1, 1 + sqrt(2), 1 + 2*sqrt(2))],
    'C4xC2 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + sqrt(2), 1, -2*sqrt(2) - 1), (-sqrt(2) - 1, 1, 1 + 2*sqrt(2)), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, 1 + 2*sqrt(2)), (1 + sqrt(2), -1, -2*sqrt(2) - 1)],
    'C6 08': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1, -sqrt(2) - 1, 1 + 2*sqrt(2)), (1 + sqrt(2), 1 + 2*sqrt(2), -1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (-1, 1 + sqrt(2), -2*sqrt(2) - 1), (-sqrt(2) - 1, -2*sqrt(2) - 1, 1)],
    'V yellow white 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-sqrt(2) - 1, -1, -2*sqrt(2) - 1), (1 + sqrt(2), -1, 1 + 2*sqrt(2)), (1 + 2*sqrt(2), -1, 1 + sqrt(2))],
    'V gby 14': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-2*sqrt(2) - 1, -1, 1 + sqrt(2))],
    'C2 white 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1)],
    'Dih4 yellow red 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1), (-1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'C4 orange 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -sqrt(2) - 1, 1), (1 + 2*sqrt(2), 1 + sqrt(2), -1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2))],
    'V yellow white 07': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (-2*sqrt(2) - 1, -1, 1 + sqrt(2)), (1 + 2*sqrt(2), -1, -sqrt(2) - 1)],
    'Dih4 yellow orange 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -sqrt(2) - 1, -1), (1 + 2*sqrt(2), -1, 1 + sqrt(2)), (1 + 2*sqrt(2), -sqrt(2) - 1, 1), (1 + 2*sqrt(2), 1 + sqrt(2), -1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, 1 + sqrt(2), 1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2))],
    'Dih4 blue orange 23': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1 + 2*sqrt(2), -sqrt(2) - 1, 1), (1 + 2*sqrt(2), 1 + sqrt(2), -1), (-2*sqrt(2) - 1, 1, 1 + sqrt(2)), (1 + 2*sqrt(2), 1 + sqrt(2), 1), (-2*sqrt(2) - 1, 1, -sqrt(2) - 1), (-2*sqrt(2) - 1, -1, 1 + sqrt(2)), (1 + 2*sqrt(2), -sqrt(2) - 1, -1)],
    'C2^3 yellow 16': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (-1, -2*sqrt(2) - 1, -sqrt(2) - 1), (1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1 + 2*sqrt(2), 1, -sqrt(2) - 1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (1, 1 + 2*sqrt(2), 1 + sqrt(2)), (-1, -2*sqrt(2) - 1, 1 + sqrt(2)), (-2*sqrt(2) - 1, -1, 1 + sqrt(2))],
    'V inv yellow 14': [(-2*sqrt(2) - 1, -1, -sqrt(2) - 1), (1, 1 + 2*sqrt(2), -sqrt(2) - 1), (1 + 2*sqrt(2), 1, 1 + sqrt(2)), (-1, -2*sqrt(2) - 1, 1 + sqrt(2))]
}
